apiVersion: apps/v1
kind: Deployment
metadata:
  name: payplus-kafka-deployment-emails
  labels:
    app: payplus-kafka-deployment-emails
    tags.datadoghq.com/env: prod
    tags.datadoghq.com/service: kafka-emails
    tags.datadoghq.com/version: "1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payplus-kafka-deployment-emails
  template:
    metadata:
      labels:
        app: payplus-kafka-deployment-emails
        tags.datadoghq.com/env: production
        tags.datadoghq.com/service: kafka-emails
        tags.datadoghq.com/version: "1"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
               - key: pub-sub
                 operator: NotIn
                 values:
                 - "yes"
      containers:
      - name: payplus-kafka-deployment-emails
        image: imagename
        envFrom:
          - configMapRef:
              name: kafka-cm
        env:
        - name: DD_ENV
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_RUNTIME_METRICS_ENABLED
          value: "true"
        - name: TOPIC
          value: emails
        - name: env
          value: "dev"
        - name: MODE
          value: "dev"
